<!DOCTYPE html>
<html>
  <head>
    <title>Students Management System</title>
    <link rel="stylesheet" href="/css/styles.css" />
    <style>
      .error-message {
        color: #ff4757;
        font-size: 0.8em;
        margin-top: 5px;
        display: none;
      }
      .error-message.show {
        display: block;
      }
      .form-group input.error {
        border-color: #ff4757;
      }
    </style>
  </head>
  <body>
    <div class="container">
      <h1>Student Management System</h1>

      <button class="add-button" onclick="openModal()">Add New Student</button>

      <div class="students-list">
        <% if (students && students.length > 0) { %>
        <table class="student-table">
          <thead>
            <tr>
              <th>ID</th>
              <th>Name</th>
              <th>Age</th>
              <th>Course</th>
              <th>Department</th>
            </tr>
          </thead>
          <tbody>
            <% students.forEach(function(student) { %>
            <tr>
              <td><%= student.id %></td>
              <td><%= student.name %></td>
              <td><%= student.age %></td>
              <td><%= student.course %></td>
              <td><%= student.department %></td>
            </tr>
            <% }); %>
          </tbody>
        </table>
        <% } else { %>
        <p>No students found.</p>
        <% } %>
      </div>
    </div>

    <!-- Modal -->
    <div id="studentModal" class="modal">
      <div class="modal-content">
        <span class="close-button" onclick="closeModal()">&times;</span>
        <h2>Add New Student</h2>
        <form action="/students" method="POST" id="studentForm" novalidate>
          <div class="form-group">
            <label for="name">Name:</label>
            <input type="text" id="name" name="name" required />
            <div class="error-message" id="name-error"></div>
          </div>
          <div class="form-group">
            <label for="age">Age:</label>
            <input type="number" id="age" name="age" required />
            <div class="error-message" id="age-error"></div>
          </div>
          <div class="form-group">
            <label for="course">Course:</label>
            <input type="text" id="course" name="course" required />
            <div class="error-message" id="course-error"></div>
          </div>
          <div class="form-group">
            <label for="department">Department:</label>
            <input type="text" id="department" name="department" required />
            <div class="error-message" id="department-error"></div>
          </div>
          <button type="submit">Add Student</button>
        </form>
      </div>
    </div>

    <script src="/js/validation.js"></script>
    <script>
      // Form validation
      const form = document.getElementById("studentForm");
      const inputs = form.querySelectorAll("input");
      let formValid = false;

      inputs.forEach((input) => {
        input.addEventListener("input", function () {
          const error = validateField(this.name, this.value);
          const errorElement = document.getElementById(`${this.name}-error`);

          if (error) {
            this.classList.add("error");
            errorElement.textContent = error;
            errorElement.classList.add("show");
            formValid = false;
          } else {
            this.classList.remove("error");
            errorElement.classList.remove("show");
            formValid = Array.from(inputs).every(
              (input) => !validateField(input.name, input.value)
            );
          }
        });
      });

      // Form submission with validation
      form.addEventListener("submit", async (e) => {
        e.preventDefault();

        // Validate all fields
        inputs.forEach((input) => {
          const error = validateField(input.name, input.value);
          const errorElement = document.getElementById(`${input.name}-error`);

          if (error) {
            input.classList.add("error");
            errorElement.textContent = error;
            errorElement.classList.add("show");
            formValid = false;
          }
        });

        if (!formValid) {
          return;
        }

        const formData = new FormData(e.target);
        const data = Object.fromEntries(formData.entries());

        try {
          const response = await fetch("/students", {
            method: "POST",
            headers: {
              "Content-Type": "application/json",
            },
            body: JSON.stringify(data),
          });

          if (response.ok) {
            closeModal();
            window.location.reload();
          } else {
            const errorData = await response.json();
            alert(errorData.error || "Error adding student");
          }
        } catch (error) {
          console.error("Error:", error);
          alert("Error adding student");
        }
      });

      // Modal functions
      function openModal() {
        document.getElementById("studentModal").style.display = "block";
        form.reset();
        inputs.forEach((input) => {
          input.classList.remove("error");
          document
            .getElementById(`${input.name}-error`)
            .classList.remove("show");
        });
        formValid = false;
      }

      function closeModal() {
        document.getElementById("studentModal").style.display = "none";
      }

      window.onclick = function (event) {
        const modal = document.getElementById("studentModal");
        if (event.target === modal) {
          closeModal();
        }
      };
    </script>
  </body>
</html>
